/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IFlashLoanReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFlashLoanReceiver__factory>;
    getContractFactory(
      name: "ILendingPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPool__factory>;
    getContractFactory(
      name: "ILendingPoolAddressesProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILendingPoolAddressesProvider__factory>;
    getContractFactory(
      name: "ISNXFlashLoanTool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISNXFlashLoanTool__factory>;
    getContractFactory(
      name: "SNXFlashLoanTool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SNXFlashLoanTool__factory>;
    getContractFactory(
      name: "IAddressResolver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAddressResolver__factory>;
    getContractFactory(
      name: "IDelegateApprovals",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegateApprovals__factory>;
    getContractFactory(
      name: "ISynth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynth__factory>;
    getContractFactory(
      name: "ISynthetix",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISynthetix__factory>;
    getContractFactory(
      name: "IVirtualSynth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVirtualSynth__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
